{"version":3,"sources":["components/Contactform.js","firebaseop.js","components/Contacts.js","components/Materialui.js","components/Appbar.js","components/Cards.js","App.js","reportWebVitals.js","Theme.js","index.js"],"names":["Contactform","addorEdit","currid","contactsobj","initialfieldvalue","fullname","Mobile","email","address","useState","user","setUser","console","log","useEffect","handleInputChange","e","target","name","value","action","autoComplete","onSubmit","preventDefault","className","type","placeholder","onChange","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Contacts","setContactsobj","setCurrid","firebaseDb","child","on","snapshot","val","obj","push","err","set","Object","keys","map","id","onClick","key","window","confirm","remove","makeStyles","hellostyle","fontStyle","color","fontSize","buttonStyle","Materialui","typographyStyles","flex","bullet","display","margin","transform","title","pos","marginBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Theme","createTheme","palette","primary","yellow","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.7f37d8ae.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n// import Contacts from './Contacts'\r\n\r\nfunction Contactform({addorEdit,currid,contactsobj}) {\r\n    const initialfieldvalue={\r\n        fullname:'',\r\n        Mobile:'',\r\n        email:'',\r\n        address:'',\r\n    }\r\n    const [user,setUser]=useState(initialfieldvalue)\r\n    console.log(\"heyyyyyy\",contactsobj)\r\n    console.log(\"heyyyyyy\",currid)\r\n\r\n    useEffect(()=>{\r\n        if(currid==''){\r\n            setUser({\r\n                ...initialfieldvalue\r\n            })\r\n        \r\n        }\r\n        else{\r\n            setUser({\r\n                ...contactsobj[currid]\r\n            })\r\n\r\n        }\r\n\r\n    },[currid,contactsobj,]\r\n    )\r\n    \r\n    const handleInputChange=(e)=>{\r\n        var {name,value}=e.target \r\n        console.log(\"frommmmmm\",e.target)\r\n        console.log(name)\r\n        console.log(value)\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n    })\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n    console.log(user)\r\n    // console.log(\"this is propppppp\",props.user)\r\n\r\n        addorEdit(user)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form action=\"\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"fullname\" name=\"fullname\" value={user.fullname}\r\n                    onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Mobile\" name=\"Mobile\" value={user.Mobile}\r\n                    onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"email\" name=\"email\" value={user.email} \r\n                    onChange={handleInputChange}/>\r\n                </div>\r\n               \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea name=\"address\" placeholder=\"Address\" name=\"address\" value={user.address}\r\n                    onChange={handleInputChange}></textarea>\r\n\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <input type=\"submit\" value={currid==''?\"Save\":\"Update\"} className=\"btn btn-primary btn-block\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contactform\r\n\r\n","import firebase from \"firebase/app\"\r\nimport 'firebase/database'\r\n// import initializeApp from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBgPVCaood3VSv7cNdYTcE4bU0bKthYjnk\",\r\n    authDomain: \"contactbook-63d67.firebaseapp.com\",\r\n    databaseURL: \"https://contactbook-63d67-default-rtdb.firebaseio.com\",\r\n    projectId: \"contactbook-63d67\",\r\n    storageBucket: \"contactbook-63d67.appspot.com\",\r\n    messagingSenderId: \"513095150883\",\r\n    appId: \"1:513095150883:web:cf00c56762ae5df1b97096\"\r\n  };\r\n  // Initialize Firebase\r\n  var fireDb=firebase.initializeApp(firebaseConfig);\r\n\r\n  export default fireDb.database().ref()","import React,{useState,useEffect} from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Typography } from '@material-ui/core'\r\nimport Contactform from './Contactform'\r\nimport app from '../App'\r\nimport firebaseDb from '../firebaseop'\r\nfunction Contacts() {\r\n    var [contactsobj,setContactsobj]=useState(0)\r\n    var [currid,setCurrid]=useState('')\r\n    useEffect(()=>{\r\n        firebaseDb.child('contacts').on('value',snapshot=>{\r\n            if(snapshot.val()!=null)\r\n                setContactsobj({\r\n                    ...snapshot.val()\r\n                })\r\n            else\r\n                setContactsobj([])\r\n                \r\n        })\r\n\r\n\r\n    },[])\r\n    const addorEdit=(obj)=>{\r\n        if(currid=='')\r\n            firebaseDb.child('contacts').push(\r\n                obj,\r\n                err=>{\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrid('')\r\n                }\r\n            )\r\n        else\r\n            firebaseDb.child(`contacts/${currid}`).set(\r\n                obj,\r\n                err=>{\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrid('')\r\n                }\r\n            )\r\n            \r\n\r\n    }\r\n    const onDelete=key=>{\r\n        if(window.confirm('Are You sure To delete this record')){\r\n            firebaseDb.child(`contacts/${key}`).remove(\r\n                err=>{\r\n                    if(err)\r\n                        console.log(err)\r\n                    else \r\n                        setCurrid('')\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">Contact Form</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                        <Contactform  {...({addorEdit,currid,contactsobj})}/>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <table className=\"table table-borderless table-striped\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>Full Name</th>\r\n                                    <th>Mobile</th>\r\n                                    <th>Email</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    Object.keys(contactsobj).map(id=>{\r\n                                        return <tr key={id}>\r\n                                            <td>{contactsobj[id].fullname}</td>\r\n                                            <td>{contactsobj[id].email}</td>\r\n                                            <td>{contactsobj[id].Mobile}</td>\r\n                                            <td>{contactsobj[id].address}</td>\r\n\r\n                                             <a className=\"btn text-primary\"\r\n                                             onClick={()=>{setCurrid(id)}}>\r\n                                                 <i className=\"fas fa-pencil-all\"></i>\r\n                                                 p\r\n                                             </a>\r\n                                             <a className=\"btn text-danger\" onClick={()=>onDelete(id)}>\r\n                                                 <i className=\"far fa-trash-all\"></i>\r\n                                                 d\r\n                                             </a>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n    )\r\n}\r\nexport default Contacts\r\n\r\n","import React,{useState} from 'react'\r\nimport { Button } from '@material-ui/core'\r\n// import { WithStyles } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\nimport { typography } from '@material-ui/system'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle=makeStyles({\r\n  hellostyle:{\r\n    fontStyle:\"oblique\",\r\n    color:\"red\",\r\n    fontSize:\"20px\"\r\n\r\n\r\n  },\r\n  buttonStyle:{\r\n      color:\"white\"\r\n  }\r\n})\r\nfunction Materialui() {\r\n    const classes=useStyle()\r\n\r\n    return (\r\n        <div>\r\n          <Typography className={classes.hellostyle} color=\"secondary\" variant=\"h1\">Hello this is learning</Typography>\r\n          <Button className={classes.buttonStyle} disabled={false}  variant=\"contained\" color=\"primary\" >helllo</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Materialui\r\n","import React,{useState} from 'react'\r\nimport { grid } from '@material-ui/system'\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport { AccountBox } from '@material-ui/icons'\r\nimport { Notifications } from '@material-ui/icons'\r\nimport { OndemandVideoTwoTone } from '@material-ui/icons'\r\nimport { Home } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyle=makeStyles({\r\n    typographyStyles:{\r\n        flex:1\r\n    }\r\n})\r\nfunction Appbar() {\r\n    const classes=useStyle()\r\n    return (\r\n        <div>\r\n           <AppBar position=\"static\">\r\n               <Toolbar>\r\n                   <Typography className={classes.typographyStyles}>Appi</Typography>\r\n                   <Home/>\r\n                   {/* <OndemandVideoTwoTone/>\r\n                   <Notifications/>\r\n                   <AccountBox/> */}\r\n               </Toolbar>\r\n           </AppBar>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { ShareTwoTone } from '@material-ui/icons';\r\nconst useStyle = makeStyles({\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nfunction Cards(props) {\r\n    const classes = useStyle();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    const {avatarSrc,title,subtitle,desc,imgSrc}=props\r\n    return (\r\n        <div>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar  src={avatarSrc}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <ShareTwoTone/>\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={subtitle}\r\n      />\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          be{bull}nev{bull}o{bull}lent\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          adjective\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Contacts from './components/Contacts'\nimport Materialui from './components/Materialui';\n// import Contactform from './components/Contactform'\n// import { Container } from '@material-ui/core';\nimport Actualux from './components/actualux';\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Materialui/> */}\n      {/* <Actualux/> */}\n      <Contacts/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport { yellow } from '@material-ui/core/colors';\r\n\r\nconst Theme = createTheme({\r\n  palette: {\r\n    primary:yellow\r\n  },\r\n});\r\n\r\nexport default Theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './Theme'\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n        <App />\n\n    </ThemeProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}